//string tilemap
//int windowwidth
//int windowheight
//int scale
//int tilesx
//int tilesy
import std.string;
Image sheet_=LoadImage(tilemap.toStringz);
auto sheetblob=readblob(tilemap);
int[10] hotkeys;
if(sheetblob.data.length==10){
	foreach(i,e;sheetblob.data){
		hotkeys[i]=e;}}
//hotkeys.writeln;
import std.conv;
int tilewidth=sheetblob.get("tilewidth").to!int;
int tileheight=sheetblob.get("tileheight").to!int;
int row=sheet_.width/tilewidth;
import std.algorithm;
import std;
InitWindow(
	cast(int)(min(max(windowwidth,tilewidth*tilesx*scale),1920)),
	cast(int)(min(max(windowheight,tileheight*tilesy*scale),1080)),
	"lazyautotile");
SetTargetFPS(60);
Texture2D sheet=LoadTextureFromImage(sheet_);
void drawtile(int i,int x,int y){
	DrawTextureTiled(sheet,
		Rectangle((i%row)*tilewidth,(i/row)*tileheight,tilewidth,tileheight),
		Rectangle(x*scale,y*scale,tilewidth*scale,tileheight*scale),
		Vector2(0,0),0,scale,Colors.WHITE);
}
void drawtiletrans(int i,int x,int y,ubyte t){
	DrawTextureTiled(sheet,
		Rectangle((i%row)*tilewidth,(i/row)*tileheight,tilewidth,tileheight),
		Rectangle(x*scale,y*scale,tilewidth*scale,tileheight*scale),
		Vector2(0,0),0,scale,Color(255,255,255,t));
}
int offsetx;
int offsety;
void drawaligned(T)(T array){
	foreach(x,y,i;array){
		drawtile(i,x*tilewidth+offsetx,y*tileheight+offsety);}}
void drawalignedtrans(T)(T array,ubyte t){
	foreach(x,y,i;array){
		drawtiletrans(i,x*tilewidth+offsetx,y*tileheight+offsety,t);}}